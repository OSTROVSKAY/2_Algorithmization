	
	/*
		7. Пусть даны две неубывающие последовательности действительных чисел : a1 <= a2 <= ... <= an и b1 <= b2 <= ... <= bm.
			Требуется указать те места, на которые нужно вставлять элементы последовательности : b1 <= b2 <= ... <= bm в первую
			последовательность так, чтобы новая последовательность оставалась возрастающей.
	*/
	
package Task_3_7;
	
import java.util.ArrayList;
	
public class Task_3_7 {
	
	public static void main(String[] args) {
		
		System.out.println("--------------------------------------------------------");
		System.out.println("ПРОГРАММА : СЛИЯНИЕ ДВУХ НЕУБЫВАЮЩИХ ПОСЛЕДОВАТЕЛЬНОСТЕЙ");
		System.out.println("--------------------------------------------------------");
		System.out.println("--------------------------------------------------------");
		
		Task_3_7_res Inp = new Task_3_7_res();
		
		// Ввод ПЕРВОГО одномерного массива
		System.out.println("Ввод ПЕРВОГО одномерного массива A[N] :");
		System.out.println("---------------------------------------");
		
		// Ввод ПЕРВОГО одномерного массива
		System.out.println("Введите размер ПЕРВОГО одномерного массива : N");
		System.out.println("----------------------------------------------");
		
		int N = 0;
		
		do {
			N = Inp.InputInt();
			
		if ( N <= 0 )
			{
			System.out.println("--------------------------------------------------");
			System.out.println("Введенные данные меньше или равно 0. Введите снова");
			System.out.println("--------------------------------------------------");
			}
			
		} while ( N <= 0 );
		
		
		// Ввод ВТОРОГО одномерного массива
		System.out.println("Ввод ВТОРОГО одномерного массива B[M] :");
		System.out.println("---------------------------------------");
		
		// Ввод ВТОРОГО одномерного массива
		System.out.println("Введите размер ВТОРОГО одномерного массива : M");
		System.out.println("----------------------------------------------");
		
		int M = 0;
		
		do {
			M = Inp.InputInt();
			
		if ( M <= 0 )
			{
			System.out.println("--------------------------------------------------");
			System.out.println("Введенные данные меньше или равно 0. Введите снова");
			System.out.println("--------------------------------------------------");
			}
			
		} while ( M <= 0 );
		
		
		// Объявление ПЕРВОГО массива A[N]
		double[] A = new double[N];
		
		// Запись ПЕРВОГО массива A[N]
		A = Inp.WriteMass(A, N);
		
		// Объявление ВТОРОГО массива B[M]
		double[] B = new double[M];
		
		// Запись ВТОРОГО массива A[N]
		B = Inp.WriteMass(B, M);
		
		// Вывод на печать ПЕРВОГО массива
		System.out.println("------------------------------------------------------");
		System.out.println("Вывод на печать ПЕРВОГО массива. Размер массива : " + A.length);
		System.out.println("------------------------------------------------------");
		Inp.PrintMass(A);
		
		// Вывод на печать ВТОРОГО массива
		System.out.println("------------------------------------------------------");
		System.out.println("Вывод на печать ВТОРОГО массива. Размер массива : " + B.length);
		System.out.println("------------------------------------------------------");
		Inp.PrintMass(B);
		
		
		// ПОИСК МЕСТ ДЛЯ ВСТАВКИ ЭЛЕМЕНТОВ ВТОРОЙ ПОСЛЕДОВАТЕЛЬНОСТИ В ПЕРВУЮ ПОСЛЕДОВАТЕЛЬНОСТЬ
		
		ArrayList<Double> finalSequence = new ArrayList<Double>();
		
		try {
			
			finalSequence = Inp.merge(A, B);
			
			// System.out.println("Финальная последовательность : " +  (finalSequence.toString().substring(1, finalSequence.toString().length() - 1)) );
			
			}catch( IllegalArgumentException e) {
				System.out.println( e.getMessage() );
		}
		
		
		// Вывод на печать итоговой последовательности
		System.out.println("--------------------------------------------------------");
		System.out.println("Вывод на печать ИТОГОВОГО массива. Размер массива : " +  finalSequence.size());
		System.out.println("--------------------------------------------------------");
		
		Inp.PrintMass1(finalSequence);
		
	}
	
}

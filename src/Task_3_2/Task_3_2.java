	
/*
	2. Даны две последовательности : a1 <= a2 ... <= an и b1 <= b2 ... <= bm.
		Образовать из них новую последовательность чисел так, чтобы она тоже была неубывающей.
		Примечание. Дополнительный массив не использовать.
*/
	
package Task_3_2;
	
public class Task_3_2 {
	
	public static void main(String[] args) {
		
		System.out.println("------------------------------------------------");
		System.out.println("ПРОГРАММА : ОБЪЕДИНЕНИЕ ДВУХ ОДНОМЕРНЫХ МАССИВОВ");
		System.out.println("------------------------------------------------");
		System.out.println("------------------------------------------------");
		
		// Ввод первого одномерного массива
		System.out.println("Ввод первого одномерного массива A[N] :");
		System.out.println("---------------------------------------");
		
		// Ввод первого одномерного массива
		System.out.println("Введите размер первого одномерного массива : N");
		System.out.println("----------------------------------------------");
		
		int N = 0;
		
		do {
			N = Task_3_2_res.InputInt();
			
		if ( N <= 0 )
			{
			System.out.println("--------------------------------------------------");
			System.out.println("Введенные данные меньше или равно 0. Введите снова");
			System.out.println("--------------------------------------------------");
			}
			
		} while ( N <= 0 );
		
		// Объявление одномерного массива A[N]
		double A[] = new double[N];
		
		// Запись ПЕРВОГО одномерного массива
		A = Task_3_2_res.WriteMass(A, N);
		
		// Ввод второго одномерного массива
		System.out.println("Ввод второго одномерного массива B[M] :");
		System.out.println("---------------------------------------");
		
		// Ввод второго одномерного массива
		System.out.println("Введите размер второго одномерного массива : M");
		System.out.println("----------------------------------------------");
		
		int M = 0;
		
		do {
			M = Task_3_2_res.InputInt();
			
			if ( M <= 0 )
				{
				System.out.println("--------------------------------------------------");
				System.out.println("Введенные данные меньше или равно 0. Введите снова");
				System.out.println("--------------------------------------------------");
				}
				
		} while ( M <= 0 );
		
		// Объявление одномерного массива B[M]
		double B[] = new double[M];
		
		// Запись ВТОРОГО одномерного массива
		B = Task_3_2_res.WriteMass(B, M);
		
		// Вывод на печать ПЕРВОГО массива
		System.out.println("------------------------------------------------------");
		System.out.println("Вывод на печать ПЕРВОГО массива. Размер массива : " + N);
		System.out.println("------------------------------------------------------");
		Task_3_2_res.PrintMass(A);
		
		// Вывод на печать ВТОРОГО массива
		System.out.println("------------------------------------------------------");
		System.out.println("Вывод на печать ВТОРОГО массива. Размер массива : " + M);
		System.out.println("------------------------------------------------------");
		Task_3_2_res.PrintMass(B);
		
		// Образование из двух неубывающих последовательностей новой последовательности чисел так, чтобы она тоже была неубывающей.
		// Объявление итогового одномерного массива C[N+M]
		
		double[] C = new double[A.length + B.length];
		
		
		for ( int i = 0; i < A.length; i++ ) {
			
			C[i]= A[i];
			
		}
		
		for ( int i = A.length; i < C.length; i++ ) {
			
			C[i] = B [i - A.length];
			
		}
		
		
		// Вывод на печать ИТОГОВОГО массива
		System.out.println("------------------------------------------------------------------------");
		System.out.println("Вывод на печать ИТОГОВОГО НЕСОРТИРОВАННОГО массива. Размер массива : " + C.length);
		System.out.println("------------------------------------------------------------------------");
		Task_3_2_res.PrintMass(C);
		
		
		// Сортировка ИТОГОВОГО массива
		
		double min = 0;
		double min1 = 0;
		int indmin = 0;
		
		
		for ( int i = 0; i < C.length; i++ ) {
			
			min = C[i];
			min1 = C[i];
			
			indmin = i;
			
			for ( int j = i; j < C.length; j++ ) {
				
				if ( C[j] < min ) {
					
					min = C[j]; indmin = j;
				}
				
			}
			
			C[i] = min;
			C[indmin] = min1;
			
			min = 0;
			indmin = 0;
			min1 = 0;
		}
		
		System.out.println("----------------------------------------------------------------------");
		System.out.println("Вывод на печать ИТОГОВОГО СОРТИРОВАННОГО массива. Размер массива : " + C.length);
		System.out.println("----------------------------------------------------------------------");
		Task_3_2_res.PrintMass(C);
		
	}
	
}

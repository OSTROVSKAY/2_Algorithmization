	
/*
	13. Два простых числа называются «близнецами», если они отличаются друг от друга на 2 (например, 41 и 43)
	Найти и напечатать все пары «близнецов» из отрезка [n,2n], где n - заданное натуральное число больше 2
	Для решения задачи использовать декомпозицию.
*/
	
package Task_4_13;
	
public class Task_4_13 {
	
	public static void main(String[] args) {
		
		System.out.println("---------------------------------------------------------------------------------------------------");
		System.out.println("ПРОГРАММА : ВЫЧИСЛЕНИЕ ВСЕХ ПАР «ЧИСЕЛ-БЛИЗНЕЦОВ» НА ОТРЕЗКЕ [N,2N]. N - НАТУРАЛЬНОЕ ЧИСЛО БОЛЬШЕ 2");
		System.out.println("---------------------------------------------------------------------------------------------------");
		
		Task_4_13_res Inp = new Task_4_13_res();
		
		// Ввод N - заданное натуральное число больше 2
		System.out.println("Введите натуральное число : N");
		System.out.println("-----------------------------");
		
		int N = 0;
		
		do {
			N = Inp.InputInt();
			
			if ( N <= 2 )
				{
				System.out.println("--------------------------------------------------");
				System.out.println("Введенные данные меньше или равны 2. Введите снова");
				System.out.println("--------------------------------------------------");
				}
				
			} while ( N <= 2 );
		
		int N1 = 2 * N;
		
		// Расчёт и печать всех пар «чисел - близнецов» на отрезке [n,2n], где n - заданное натуральное число больше 2
		System.out.println("-------------------------------------------------------------------------------------------------------------------------");
		System.out.println("Расчёт и печать всех пар « чисел-близнецов » на отрезке : [ " + N + " , " + N1 + " ] , где : " + N + " - заданное натуральное число больше 2");
		System.out.println("-------------------------------------------------------------------------------------------------------------------------");
		
		Inp.PrintPair(N, N1);
	}
	
}
